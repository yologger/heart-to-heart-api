# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build

      # Make Directory for deliver
      - name: Make Directory for deliver
        run: mkdir deploy

      # Copy Jar
      - name: Copy Jar
        run: cp ./build/libs/*.jar ./deploy/

      # Zip Jar
      - name: Zip Jar
        run: zip -r -qq -j ./${{ secrets.AWS_PROD_ZIP_NAME }}.zip ./deploy

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_PROD_S3_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_PROD_S3_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_PROD_S3_REGION }}

      # Upload to S3 Bucket
      - name: Upload to S3 Bucket
        run: aws s3 cp --region ${{ secrets.AWS_PROD_S3_REGION }} --acl private ./${{ secrets.AWS_PROD_ZIP_NAME }}.zip s3://${{ secrets.AWS_PROD_ZIP_NAME }}/

#       # Deploy
#       - name: Deploy
#         env:
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_PROD_ACCESS_KEY_ID }}
#           AWS_SECRET_ACCESS_KE:Y: ${{ secrets.AWS_PROD_SECRET_KEY_ID }}
#         run: |
#           aws deploy create-deployment \
#           --application-name heart-to-heart-api-codeDeploy-app \
#           --deployment-group-name heart-to-heart-api-codeDeploy-app-group \
#           --file-exists-behavior OVERWRITE \
#           --s3-location bucket=heart-to-heart-api-build,bundleType=zip,key=heart-to-heart-api-build.zip \
#           --region ${{ secrets.AWS_PROD_REGION }}

      # Slack
      - name: build result to slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{job.status}}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          author_name: Geerio CI
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
