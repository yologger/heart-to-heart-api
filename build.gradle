// Gradle plugins
plugins {
    id 'java'
    id 'org.springframework.boot' version '2.5.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.yologger'
version = '0.0.1' + '-' + new Date().format("yyyyMMddHHmmss")

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

jar {
    enabled = false
}

repositories {
    mavenCentral()
}

dependencies {

    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.jetbrains:annotations:20.1.0'
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Spring Data JPA
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"

    // Spring Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    // Spring Mail
    implementation 'org.springframework.boot:spring-boot-starter-mail:2.6.3'

    // AWS S3
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-aws', version: '2.2.5.RELEASE'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // H2
    testImplementation 'com.h2database:h2'

    // Slf4j
    testImplementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'

    // NySQL Driver
    runtimeOnly group: 'mysql', name: 'mysql-connector-java', version: '8.0.26'

    // Maria Driver
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    // Truth
    testImplementation 'com.google.truth:truth:1.1.3'

    // JWT
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'

    // JSONObject
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'

    // Query DSL
    implementation 'com.querydsl:querydsl-jpa'
}

test {
    useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}